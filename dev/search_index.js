var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"K. Lomakin, G. Gold and K. Helmreich. Analytical Waveguide Model Precisely Predicting Loss and Delay Including Surface Roughness. IEEE Transactions on Microwave Theory and Techniques 66, 2649–2662 (2018).\n\n\n\nR. E. Collin. Foundations for Microwave Engineering. 2cd Edition (McGraw-Hill, 1992).\n\n\n\nD. N. Grujić. Simple and Accurate Approximation of Rough Conductor Surface Impedance. IEEE Transactions on Microwave Theory and Techniques 70, 2053–2059 (2022).\n\n\n\n","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"Tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"This page was generated using Literate.jl.","category":"page"},{"location":"Tutorial/","page":"Tutorial","title":"Tutorial","text":"","category":"page"},{"location":"Contents/#Contents","page":"Contents","title":"Contents","text":"","category":"section"},{"location":"Contents/","page":"Contents","title":"Contents","text":"Depth = 4\nPages = [\"index.md\", \"Tutorial.md\", \"autodocs.md\", \"references.md\"]","category":"page"},{"location":"Contents/","page":"Contents","title":"Contents","text":"","category":"page"},{"location":"Contents/","page":"Contents","title":"Contents","text":"This page was generated using Literate.jl.","category":"page"},{"location":"Contents/","page":"Contents","title":"Contents","text":"","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"WaveguideModes is a Julia package intended to assist microwave engineers and others who work with metallic waveguides.","category":"page"},{"location":"#For-Microwave-Engineers/Designers","page":"Introduction","title":"For Microwave Engineers/Designers","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Convenient, user-oriented functions rwg_modetable and cwg_modetable (the latter coming \"soon\"), are called from the Julia REPL to produce pretty-printed tables of modal cutoff frequency, guide wavelength, and attenuation constant for guides whose walls may be lossy and non-smooth. Here's an example:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using WaveguideModes\nrwg_modetable(\"WR62\", 12u\"GHz\"; σ = 58u\"MS/m\", Rq = 20e-6u\"inch\", length_unit=u\"cm\")","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In the case of the rectangular waveguide TE₁₀ and TE₀₁ modes, highly accurate formulas from [1] are used. For the other rectangular waveguide modes and all circular waveguide modes, standard perturbational formulas [2] are used to incorporate effects of metal wall losses into above-cutoff attenuation constants, using an effective surface resistance from [3] to accurately account for finite surface roughness. See the Tutorial section of the documentation for more details.","category":"page"},{"location":"#For-Julia-Programmers","page":"Introduction","title":"For Julia Programmers","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"WaveguideModes implements the following hierarchies of types:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"flowchart LR\n    Any --> Waveguide\n    Waveguide --> MetallicWaveguide\n    MetallicWaveguide --> HomogeneousMetallicWaveguide\n    HomogeneousMetallicWaveguide --> RWG\n    HomogeneousMetallicWaveguide --> CWG","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"flowchart LR\n    Any --> Mode\n    Mode --> MetalPipeMode\n    MetalPipeMode --> HomogeneousMetalPipeMode\n    HomogeneousMetalPipeMode --> RWGMode\n    HomogeneousMetalPipeMode --> CWGMode","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"RWG and RWGMode are concrete types for representing rectangular homogeneously-filled, metallic waveguides and the modes they support.  CWG and CWGMode are the corresponding types for circular guides. These types along with their constructors and utility functions such as setup_modes! provide a convenient software \"scaffolding\" for those wishing to implement algorithms dealing with waveguide modes, e.g. mode matching analysis.","category":"page"},{"location":"#Package-Installation","page":"Introduction","title":"Package Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"You can obtain WaveguideModes using Julia's Pkg REPL-mode (hitting ] as the first character of the command prompt):","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"(v1.10) pkg> add WaveguideModes","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"or with using Pkg; Pkg.add(\"WaveguideModes\").","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This page was generated using Literate.jl.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"autodocs/#Public-API-Reference","page":"API Reference","title":"Public API Reference","text":"","category":"section"},{"location":"autodocs/#Publicly-Exported-Functions","page":"API Reference","title":"Publicly Exported Functions","text":"","category":"section"},{"location":"autodocs/#WaveguideModes.lookup_rwg","page":"API Reference","title":"WaveguideModes.lookup_rwg","text":"lookup_rwg(wgspec::AbstractString) -> (a, b)\n\nFind the dimensions of a rectangular waveguide given its \"spec\" (a string using standard waveguide nomenclature).\n\nInput Argument\n\nwgspec::AbstractString: A standard (EIA, RCSC, or IEC) abbreviation for a rectangular waveguide size. Examples include \"WR650\" (EIA), \"WG7\" (RCSC), and \"R22\" (IEC).\n\nReturn Value\n\n(a, b): Waveguide inner dimensions in the x and y directions, respectively, expressed as Unitful quantities with units of u\"inch\".\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#WaveguideModes.rwg_modes","page":"API Reference","title":"WaveguideModes.rwg_modes","text":"rwg_modes(a, b, f; nmodes=10, ϵᵣ=1.0, tanδ=0.0, σ=Inf*u\"S/m\", Rq=0.0u\"m\") -> modedata\n\nCompute cutoff frequency, guide wavelength, and attenuation constant for first few modes of a rectangular waveguide.\n\nNote: This function is intended for programmatic use.  For interactive use, see rwg_modetable.  \n\nRequired Positional Arguments\n\na, b: The waveguide inner dimensions as any Unitful length quantity, e.g. b=0.8128u\"cm\", b=320u\"mil\",  or b=0.320u\"inch\".  a and b must be expressed in the same length units.\nf: The frequency as any Unitful frequency quantity, e.g. f=3u\"GHz\",  f=3e9u\"Hz\" or f=3000u\"MHz\".\n\nOptional Keyword Arguments\n\nnmodes: The number of modes to be treated.  Defaults to 10.\nϵᵣ or epsr: The dielectric constant for the material filling the waveguide.\ntanδ or tandel: The loss tangent for the dielectric material filling the waveguide.\nσ or sigma: Bulk conductivity of the metal walls in any Unitful quantity with dimensions equal to those of u\"S/m\". Defaults to Inf*u\"S/m\" (perfect electric conductor).\nRq: Surface RMS roughness of the metal walls in any Unitful length dimension, e.g. 6u\"μm\". Defaults to 0u\"m\" (perfectly smooth).  The surface roughness is used with σ to compute a (lower) effective  conductivity via the MetalSurfaceImpedance package.\n\nReturn Value\n\nmodedata::Matrix{Any}: A matrix of size (nmodes, 6), containing in each row [p, m, n, fco, λg, α] for a single mode. Here p = \"TE\" for a TE mode or \"TM\" for a TM mode, m and n are integer mode indices in the x and y directions, resp., fco is the cutoff frequency expressed in the same units as input argument f (but without attached units), λg is the guide wavelength expressed in the same  units as a and b (but without attached units), and α is the mode attenuation constant in units  of dB/unitlength (without attached units), where unitlength is one unit of length in the same units  as a and b. The modes are listed in order of increasing cutoff frequency. For cutoff modes (other than TE10 or TE01 which are calculated more accurately) the value of λg will be Inf.\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#WaveguideModes.rwg_modetable-Tuple{AbstractString, Quantity{<:Real, 𝐓^-1}}","page":"API Reference","title":"WaveguideModes.rwg_modetable","text":"rwg_modetable(wgspec, frequency; kwargs...)\n\nPretty-print a table of rectangular waveguide mode properties: cutoff frequency, guide wavelength, and attenuation constant.\n\nGuide wavelength and attenuation for the TE₁₀ and TE₀₁ modes are accurately computed at frequencies below, at, or  above cutoff, for both smooth and rough imperfectly conducting surfaces, using the Gradient method as detailed  in the paper: \"Analytical waveguide model precisely predicting loss and delay including surface roughness,\"  IEEE Trans. Microwave Theory Tech., vol. 66, no. 6 (2018): pp. 2649-2662. For other modes the standard  perturbational formulas are used in conjunction with the Gradient method to determine effective surface impedance.   For cutoff modes (other than TE₁₀ and TE₀₁) the value of guide wavelength will be printed out as Inf.\n\nNote: This function is intended for interactive use.  For programmatic use, see rwg_modes.   The table is printed to the user's console using the PrettyTables package.  \n\nRequired Positional Arguments\n\nwgspec::AbstractString: A standard (EIA, RCSC, or IEC) abbreviation for a rectangular waveguide size. Examples include \"WR650\" (EIA), \"WG7\" (RCSC), and \"R22\" (IEC).\nfrequency: The frequency expressed as a Unitful quantity with dimensions of inverse time.  Examples: 2.35u\"GHz\", 2350u\"MHz\", 2.35e9u\"Hz\", etc.\n\nOptional Keyword Arguments\n\nlength_unit:: A Unitful:Units object with dimension of length. Default value is u\"inch\". The table will print values in the \"guide wavelength\" column using this unit; similarly the attenuation column will use units of dB/length_unit.\nϵᵣ or epsr: Dielectric constant of material filling the waveguide. Default value is 1.0.\ntanδ or tandel: Loss tangent of material filling the waveguide. Default value is 0.0. \nσ or sigma: The bulk conductivity of the waveguide metal walls expressed as a Unitful quantity with dimensions the same as those of u\"S/m\".  Default value is Inf*u\"S/m\".\nRq: The RMS surface roughness of the waveguide walls expressed as a Unitful quantity having dimension of length. Default value is 0.0u\"m\".\ncol_fmts::String = [\"%s\", \"%i\", \"%i\", \"%#.8g\", \"%8.4f\", \"%8.4f\"]: A vector of C-style format strings used to format the six columns of the table.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.rwg_modetable-Tuple{Quantity{<:Real, 𝐋}, Quantity{<:Real, 𝐋}, Quantity{<:Real, 𝐓^-1}}","page":"API Reference","title":"WaveguideModes.rwg_modetable","text":"rwg_modetable(a, b, frequency; kwargs...)\n\nAn alternative method for rwg_modetable allowing explicit specification of the waveguide dimensions. Here, instead of wgspec, the first two arguments are the x and y dimensions of the waveguide, expressed as Unitful quantities having dimension of length.  Both must be expressed in the same units, e.g. u\"mm\" or u\"inch\".  The default value of length_unit for this method is whatever length unit a and b use.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.rwgte10gz","page":"API Reference","title":"WaveguideModes.rwgte10gz","text":"rwgte10gz(a, b, f; ϵᵣ, tanδ, σ, Rq) -> (γ, Z)\n\nAccurately compute γ and Z (prop. constant and wave impedance) of TE10 mode in rectangular guide with rough walls.\n\nRequired Positional Arguments\n\na,  b: The waveguide x and y dimensions, Unitful quantities with dimensions of length.\nf: Frequency, a Unitful quantity with dimensions of inverse time.\n\nOptional Keyword Arguments\n\nϵᵣ, tanδ: Dielectric constant and loss tangent, respectively, of material filling the waveguide. Default values are 1.0 and 0.0, respectively.\nσ: The bulk conductivity of the waveguide metal walls, a Unitful quantity with the same dimensions as u\"S/m\". Default value is Inf*u\"S/m\".\nRq: The RMS surface roughness of the waveguide walls, a Unitful quantity with dimension of length. Default value is 0.0u\"m\"\n\nReturn Values\n\nγ: Complex propagation constant [neper/m]\nZ: Complex wave impedance [Ω]\n\nReferences\n\n[1] Lomakin, Konstantin, Gerald Gold, and Klaus Helmreich. \"Analytical waveguide model precisely predicting loss and delay including surface roughness.\" IEEE Transactions on Microwave Theory and Techniques 66, no. 6 (2018): 2649-2662.\n[2] Gold, Gerald, and Klaus Helmreich. \"A physical surface roughness model and its applications.\" IEEE Transactions on Microwave Theory and Techniques 65, no. 10 (2017): 3720-3732.\n[3] Lomakin, Konstantin, Gerald Gold, and Klaus Helmreich. \"Transmission line model for rectangular  waveguides accurately incorporating loss effects.\" In 2017 IEEE 21st Workshop on Signal and Power  Integrity (SPI), pp. 1-4. IEEE, 2017.\n\n\n\n\n\nrwgte10gz(wgspec, f; kwargs...) -> (γ, Z)\n\nThis method accepts a rectangular waveguide \"specification string\" instead of a and b dimensions.\n\nRequired Positional Inputs\n\nwgspec::AbstractString: A standard (EIA, RCSC, or IEC) abbreviation for a rectangular waveguide size. Examples include \"WR650\" (EIA), \"WG7\" (RCSC), and \"R22\" (IEC).\n\nOptional Keyword Arguments\n\nϵᵣ, tanδ: Dielectric constant and loss tangent, respectively, of material filling the waveguide. Default values are 1.0 and 0.0, respectively.\nσ: The bulk conductivity of the waveguide metal walls, a Unitful quantity with the same dimensions as u\"S/m\". Default value is Inf*u\"S/m\".\nRq: The RMS surface roughness of the waveguide walls, a Unitful quantity with dimension of length. Default value is 0.0u\"m\"\n\nReturn Values\n\nγ: Complex propagation constant [neper/m]\nZ: Complex wave impedance [Ω]\n\n\n\n\n\nrwgte10gz(a::Real, b::Real, f::Real; ϵᵣ::Real=1.0, tanδ::Real=0.0, σ::Real=Inf, Rq::Real=0.0) -> (γ, Z)\nrwgte10gz(a::Real, b::Real, f::Real; epsr::Real=1.0, tandel::Real=0.0, sigma::Real=Inf, Rq::Real=0.0) -> (γ, Z)\n\nThis method accepts SI values as pure numbers (without attached units). \n\nRequired Positional Arguments\n\na,  b: The waveguide x and y dimensions [m].\nf: Frequency [Hz]\n\nOptional Keyword Arguments\n\nϵᵣ or epsr: Dielectric constant of material filling the waveguide. Default value is 1.0.\ntanδ or tandel: Loss tangent of material filling the waveguide. Default value is 0.0. \nσ or sigma: The bulk conductivity of the waveguide metal walls [S/m]. Default value is Inf.\nRq: The RMS surface roughness of the waveguide walls [m]. Default value is 0.0.\n\nReturn Value\n\nThe tuple (γ, Z) where:\n\nγ: Complex propagation constant [neper/m]\nZ: Complex wave impedance [Ω]\n\n\n\n\n\n","category":"function"},{"location":"autodocs/#Publicly-Exported-Types","page":"API Reference","title":"Publicly Exported Types","text":"","category":"section"},{"location":"autodocs/#WaveguideModes.RWG","page":"API Reference","title":"WaveguideModes.RWG","text":"RWG <: HomogeneousMetallicWaveguide\n\nA struct representing a section of metallic, rectangular waveguide, uniformly filled with dielectric. It is assumed that the (possibly non-smooth) metal walls are either perfectly conducting or form a  \"good conductor\", in the sense that the standard perturbational formulas for losses in waveguide walls hold for higher-order modes.  For the dominant TE10 and the TE01 modes, accurate formulas from the recent literature are used. See the docstring for function rwgte10gz for more information.\n\nFields\n\na::Float64: The x-dimension of the waveguide [m].\nb::Float64: The y-dimension of the waveguide [m].\nl::Float64: The length of the waveguide section (along z) [m].\nϵᵣ::Float64: The dielectric constant for the material filling the guide [unitless].\ntanδ::Float64: The loss tangent for the material filling the guide [unitless].\nσ::Float54: The bulk conductivity of the waveguide metal walls [S/m].\nRq::Float64: The metal wall RMS surface roughness [m].\nmodes::Vector{RWGMode}: The modes treated in this guide.  If provided, the list  should be sorted in order of increasing cutoff frequency.\n\nBoth positional and keyword argument constructors for RWG are available.\n\n\n\n\n\n","category":"type"},{"location":"autodocs/#WaveguideModes.RWGMode","page":"API Reference","title":"WaveguideModes.RWGMode","text":"RWGMode <: HomogeneousMetalPipeMode\n\nStruct representing an electromagnetic mode of a rectangular waveguide, homogeneously filled with dielectric.\n\nFields:\n\np::TETM: Mode type.\nm::Int: Index for modal variation along x direction.\nn::Int: Index for modal variation along y direction.\nkco::Float64: Cutoff wavenumber [radian/meter].\nf::Float64: Frequency [Hz].\nγ::ComplexF64: Attenuation constant [neper/meter].\nZ::ComplexF64: Modal wave impedance normalized to η₀, the impedance of free space [unitless].\n\n\n\n\n\n","category":"type"},{"location":"autodocs/#Non-Exported-API-(Subject-to-Change)","page":"API Reference","title":"Non-Exported API (Subject to Change)","text":"","category":"section"},{"location":"autodocs/#Private-Functions","page":"API Reference","title":"Private Functions","text":"","category":"section"},{"location":"autodocs/#WaveguideModes.alphaploss-Tuple{Any, Number, Real}","page":"API Reference","title":"WaveguideModes.alphaploss","text":"alphaploss(params, k, Rsnorm)\n\nCompute the attenuation constant of a rectangular waveguide using the classical power loss method.\n\nInput Arguments\n\nparams: A NamedTuple or other destructurable object containing the following fields:\na, b: waveguide dimensions in x and y directions [m].\nm, n, p::TETM: Mode indices and mode type.\nkco: Cutoff wavenumber of mode [rad/m].\nk: Wavenumber in the dielectric filling the waveguide.\nRsnorm: Ratio of surface resistance of the waveguide metal walls to the intrinsic impedance of the  dielectric filling the waveguide.\nReturn Value\nα:  For frequencies above cutoff, the attenuation constant [np/m] calculated via the classical  power loss method.  For frequencies below cutoff, zero is returned.\n\nReferences:\n\nR. E. Collin, Field Theory of Guided Waves 2cd Edition, IEEE Press, 1991, Table 5.2, p. 351.\nJ. Uher, J. Bornemann and U. Rosenberg, Waveguide Components for Antenna Feed Systems: Theory and CAD, Artech House, 1991, p. 114.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.alphaploss-Tuple{RWG, Integer, Any, Any}","page":"API Reference","title":"WaveguideModes.alphaploss","text":"alphaploss(rwg::RWG, modeindex, k, Rsnorm)\n\nCompute the attenuation constant of a rectangular waveguide using the classical power loss method.\n\nInput Arguments\n\nrwg: An RWG instance with modes instantiated.\nmodeindex: The index into rwg.modes for the mode of interest.\nk: Wavenumber in the dielectric filling the waveguide.\nRsnorm: Ratio of surface resistance of the waveguide metal walls to the intrinsic impedance of the  dielectric filling the waveguide.\n\nReturn Value\n\nα:  For frequencies above cutoff, the attenuation constant [np/m] calculated via the classical  power loss method.  For frequencies below cutoff, zero.\n\nReferences:\n\nR. E. Collin, Field Theory of Guided Waves 2cd Edition, IEEE Press, 1991, Table 5.2, p. 351.\nJ. Uher, J. Bornemann and U. Rosenberg, Waveguide Components for Antenna Feed Systems: Theory and CAD, Artech House, 1991, p. 114.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.collin_gamma-Tuple{Real, Real, Integer, Integer, WaveguideModes.TETM, Any, Any}","page":"API Reference","title":"WaveguideModes.collin_gamma","text":"collin_gamma(a, b, m, n, p, k, Zsnorm)\n\nCompute variational estimate of the complex attenuation constant for a rectangular waveguide mode,  using the variational method described on pages 350-354 of the reference.\n\nArguments\n\na, b: Waveguide dimensions along x and y, respectively [m].\nm, n: Nonnegative integer mode numbers along x and y, respectively, not both zero, and neither zero if p == TM.\np::TETM: Mode type (TE or TM).\nk: The wavenumber in the dielectric medium filling the waveguide.\nZsnorm: The surface impedance of the metal waveguide walls normalized to the intrinsic impedance of the dielectric medium.\n\nReturn Value\n\nγ: A variational estimate of the complex attenuation constant [Np/m] of the specified mode.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.collin_gamma_objective-Tuple{Any, Any}","page":"API Reference","title":"WaveguideModes.collin_gamma_objective","text":"collin_gamma_objective(Δγari, parameters)\n\nObjective function for collin_gamma.\n\nArguments\n\nΔγari: A 2-vector containing real and imaginary parts of Δγa. The latter is defined such that the current estimate for γ is obtained as im*β + Δγa / a.  Note that Δγa is unitless, and is also very small for a waveguide with good conductor walls.\nparameters: A named tuple consisting of at least the following fields:\na: Waveguide x dimension [m].\np::TETM: Desired mode type\nβ: Phase constant of the degenerate modes assuming PEC walls [rad/m].\nβ²: The square of β.\nf11, term11b, A12, A21, term22b: Constants needed to evaluate the matrix elements defined in Collin Eq. (66) on page 353.  These have all been multiplied by  waveguide dimension a to render them unitless.\n\nReturn Value\n\nTBC\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.collin_gammas-Tuple{Real, Real, Integer, Integer, Any, Any}","page":"API Reference","title":"WaveguideModes.collin_gammas","text":"collin_gammas(a, b, m, n, k, Zsnorm)\n\nCompute variational estimate of the complex attenuation constant for a rectangular waveguide mode,  using the variational method described on pages 350-354 of the reference.\n\nArguments\n\na, b: Waveguide dimensions along x and y, respectively [m].\nm, n: Nonnegative integer mode numbers along x and y, respectively, not both zero, and neither zero if p == TM.\nk: The wavenumber in the dielectric medium filling the waveguide.\nZsnorm: The surface impedance of the metal waveguide walls normalized to the intrinsic impedance of the dielectric medium.\n\nReturn Value\n\n(; γte, γtm):  TE and TM complex attenuation constants [Np/m].\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.collinmatrix-Tuple{Any, Any}","page":"API Reference","title":"WaveguideModes.collinmatrix","text":"collinmatrix(γ, parameters)\n\nCompute the 2x2 matrix from Eq. (66) on page 353 of Collin (after each row multiplied by a to render unitless).\n\nArguments\n\nγ: The complex attenuation constant [Np/m] from which the matrix is to be computed.\nparameters: A named tuple consisting of at least the following fields:\nβ²: The square of β.\nf11, term11b, A12, A21, term22b: Constants needed to evaluate the matrix elements defined in Collin Eq. (66) on page 353.  These have all been multiplied by  waveguide dimension a to render them unitless.\n\nReturn Value\n\ndetabs2:  The magnitude squared of the determinant of the matrix equation in Eq. (66),  after each row has been multiplied by a to make the matrix entries unitless.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.compute_As_kxakybs-Tuple{Real, RWG, Any}","page":"API Reference","title":"WaveguideModes.compute_As_kxakybs","text":"compute_As_kxakybs(FGHz, rwg, mode_params; iterate=false)\n\nCompute dispersion matrices for a rectangular waveguide with lossy walls using 4 choices of (δx, δy)\n\nInput Arguments\n\nFGHz: The desired analysis frequency in GHz.\nrwg::RWG: An RWG instance with at least fields a, b, σ, and Rq set.\nmode_params: Named tuple or struct with fields m::Integer, n::Integer, p::TETM defining the desired mode.\niterate: If false (default), then the δx and δy values computed from [1] are used directly to compute kx and ky and thus γ. If true, then these values are used as starting values in a root-finding algorithm implementing the numerical search described in [2].\n\nReturn value\n\n(As, kxakybs), where\n\nAs: A 4-vector containing four complex matrices of size (4,2) containing the coefficients of E0 and η*H0 in the modal  dispersion relation.  As[i] contains the matrix obtained by choosing (δx, δy) to be\ni==1: (δx1, δy1)\ni==2: (δx2, δy1)\ni==1: (δx1, δy2)\ni==1: (δx2, δy2)\nkxakybs: A 4-vector containing tuples (kx*a, ky*b) computed for the same four cases as As.\n\nReferences\n\n[1] Yeap, Kim Ho, et al. \"Attenuation in circular and rectangular waveguides.\" Electromagnetics 37.3 (2017): 171-184.\n[2] Yeap, Kim Ho, et al. \"Attenuation in rectangular waveguides with finite conductivity walls.\" Radioengineering 20.2 (2011).\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.cwgkcoa-Tuple{WaveguideModes.TETM, Integer, Integer}","page":"API Reference","title":"WaveguideModes.cwgkcoa","text":"cwgkcoa(p::TETM, m::Integer, n::Integer)\n\nCompute the the product of cutoff wavenumber times radius for a circular waveguide.\n\nRequired Positional Arguments\n\np: Mode type (TE or TM).\nm: Mode number for azimuthal variation. Must be nonnegative.\nn: Mode number for radial variation. Must be positive.\n\nReturn Value\n\nkcoa: The cutoff wavenumber of the mode times the waveguide radius.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.cwgkza_abe-Tuple{WaveguideModes.TETM, Integer, Float64, ComplexF64, ComplexF64}","page":"API Reference","title":"WaveguideModes.cwgkza_abe","text":"cwgkza_abe(p::TETM, m, umn, ka, Zsn)\n\nCompute product of z-directed complex wavenumber kz and waveguide radius a for a circular waveguide.\n\nArguments\n\np::TETM: Mode type (TE or TM).\nm::Integer: Mode index for variation in ϕ direction.\numn::Float64: Equal to kco * a, where kco is the cutoff wavenumber for the mode of interest. (For circular guides this is a zero of the Bessel function J_m or a zero of its derivative).\nka::ComplexF64: Product of wavenumber (for the dielectric filling the guide) times the waveguide radius.\nZsn::ComplexF64: The ratio of the metal wall surface impedance to the intrinsic impedance of the dielectric material filling the waveguide.\n\nReturn Value\n\n'kza::Complex64': Product of the waveguide radius with the z-directed wavenumber [1/m] including both propagation (imaginary part) and attenuation (real part).\n\nReference\n\nT. Abe and Y. Yamaguchi, \"Propagation Constant Below Cutoff Frequency in a Circular Waveguide with Conducting Medium\", IEEE Trans. MTT, Vol. MTT-29, no. 7, July 1981, pp. 707-712.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.cwgkza_ploss-Tuple{WaveguideModes.TETM, Integer, Float64, ComplexF64, ComplexF64}","page":"API Reference","title":"WaveguideModes.cwgkza_ploss","text":"cwgkza_ploss(p::TETM, m, umn, ka, Zsn)\n\nCompute product of z-directed complex wavenumber kz and waveguide radius a for a circular waveguide.  Estimate the attenuation for modes above cutoff using the power loss method.\n\nArguments\n\np::TETM: Mode type (TE or TM).\nm::Integer: Mode index for variation in ϕ direction.\numn::Float64: Equal to kco * a, where kco is the cutoff wavenumber for the mode of interest. (For circular guides this is a zero of the Bessel function J_m or a zero of its derivative).\nka::ComplexF64: Product of wavenumber (for the dielectric filling the guide) times the waveguide radius.\nZsn::ComplexF64: The ratio of the metal wall surface impedance to the intrinsic impedance of the dielectric material filling the waveguide.\n\nReturn Value\n\n'kza::Complex64': Product of the waveguide radius with the z-directed wavenumber [1/m] including both propagation (imaginary part) and attenuation (real part).\n\nReference\n\nR. Collin, Field Theory of Guided Waves, 2cd Edition, Table 5.5.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.cwgkza_yeap-Tuple{WaveguideModes.TETM, Integer, Float64, ComplexF64, ComplexF64}","page":"API Reference","title":"WaveguideModes.cwgkza_yeap","text":"cwgkza_yeap(p::TETM, m, umn, ka, Zsn)\n\nCompute product of z-directed complex wavenumber kz and waveguide radius a for a circular waveguide.\n\nArguments\n\np::TETM: Mode type (TE or TM).\nm::Integer: Mode index for variation in ϕ direction.\numn::Float64: Equal to kco * a, where kco is the cutoff wavenumber for the mode of interest. (For circular guides this is a zero of the Bessel function J_m or a zero of its derivative).\nka::ComplexF64: Product of wavenumber (for the dielectric filling the guide) times the waveguide radius.\nZsn::ComplexF64: The ratio of the metal wall surface impedance to the intrinsic impedance of the dielectric material filling the waveguide.\n\nReturn Value\n\n'kza::Complex64': Product of the waveguide radius with the z-directed wavenumber [1/m] including both propagation (imaginary part) and attenuation (real part).\n\nReference\n\nK. H. Yeap et al: \"Attenuation in Circular and Rectangular Waveguides\", Electromagnetics, Vol. 37, No. 3, 2017, pp. 171-184\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.e0h0mat-Tuple{Any, Any, Any}","page":"API Reference","title":"WaveguideModes.e0h0mat","text":"e0h0mat(kxa, kyb, params)\n\nCompute the dispersion matrix A whose null space defines the possible z-component field coefficients.\n\nInput Arguments\n\nkxa, kyb: The (unitless) product of proposed x and y modal wavenumbers times the x and y dimensions of the waveguide, resp.\nparams: A struct or named tuple containing the following parameters of the waveguide problem:\nm, n: Mode numbers in the x and y directions, resp.\na, b: Waveguide x and y dimensions, resp. [m]\nk: Wavenumber [radians/m] in the dielectric filling the waveguide.\nηwn: The wall surface impedance normalized to the intrinsic impedance of the dielectric filling the waveguide.\n\nReturn Value\n\nA: ComplexF64 matrix of dimensions 4×2 computed using the provided inputs, whose nullspace spans the possible modal vectors [E₀, η*H₀].  Here E₀ is the coefficient of the z-component of electric field, H₀ is the coefficient of the z-component of magnetic field, and η is the intrinsic impedance of the dielectric filling the waveguide.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.is_html_environment-Tuple{}","page":"API Reference","title":"WaveguideModes.is_html_environment","text":"is_html_environment()\n\nReturns true if code is running under IJulia or Pluto, and false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.mysqrt-Tuple{Any}","page":"API Reference","title":"WaveguideModes.mysqrt","text":"mysqrt(x)\n\nSame as sqrt unless sqrt(x) is pure negative imaginary in which case it returns -sqrt(x) (i.e., positive pure imaginary).\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.nlsolvedkxadkyb-Tuple{AbstractVector, Any}","page":"API Reference","title":"WaveguideModes.nlsolvedkxadkyb","text":"nlsolvedkxadkyb(Δs, params) -> residual::SVector{4, Float64}\n\nFunction defining a NonLinearProblem whose solution provides rigorously correct kx and ky values for a rectangular waveguide.\n\nPositional Arguments\n\nΔs: A 4-vector containing the unitless values [real(Δkxa), imag(Δkxa), real(Δkyb), imag(Δkyb)].  HereΔkxais the departure ofkxfrom its nominal value (for PEC walls) ofmπ/a.  Similarly,Δkybis the departure ofkyfrom its nominal value ofnπ/b.  The entries inΔs` are to be adjusted to produce a zero return vector.\nparams:  A named tuple containing the fixed parameters of the waveguide problem.  These are\nm and n: Mode indices in the x and y directions, respectively.\nk: The (complex) wavenumber in the dielectric filling the waveguide [radians/m].\na and  b:  The waveguide (inner) dimensions in the x and y directions, respectively [m].\nηwn: Waveguide wall surface impedance normalized to the intrinsic impedance of the dielectric filling the waveguide.\n\nReturn Value\n\nresidual: A static 4-vector containing the real and imaginary parts of the two expressions that must be zeroed for a valid  solution.\n\nReference:\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.nlsolvekxakyb-Tuple{AbstractVector, Any}","page":"API Reference","title":"WaveguideModes.nlsolvekxakyb","text":"nlsolvekxakyb(rikakbs, params) -> residual::SVector{4, Float64}\n\nFunction defining a NonLinearProblem whose zero solves the determinantal equations for the kx and ky values of a rectangular waveguide.\n\nPositional Arguments\n\nrikakbs: A 4-vector containing the unitless values [real(kxa), imag(kxa), real(kyb), imag(kyb)].  Herekxais the product ofkxanda(the waveguide x dimension) Similarly,kybis the product ofkyandb(the waveguide y dimension). The entries inrikakbs` are to be adjusted to produce a zero return vector.\nparams:  A named tuple containing the fixed parameters of the waveguide problem.  These are\nm and n: Mode indices in the x and y directions, respectively.\nk: The (complex) wavenumber in the dielectric filling the waveguide [radians/m].\na and  b:  The waveguide (inner) dimensions in the x and y directions, respectively [m].\nηwn: Waveguide wall surface impedance normalized to the intrinsic impedance of the dielectric filling the waveguide.\n\nReturn Value\n\nresidual: A static 4-vector containing the real and imaginary parts of the two expressions that must be zeroed for a valid  solution.\n\nReference:\n\n[1] Yeap, Kim Ho, et al. \"Attenuation in circular and rectangular waveguides.\" Electromagnetics 37.3 (2017): 171-184.  See Eqs. (6a) and (6b). [2] P. Simon, \"Notes on Attenuation in Circular and Rectangular Waveguides\", Eqs (7a) and (7b).\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.rwggz-Tuple{WaveguideModes.TETM, Int64, Int64, Real, Real, Real}","page":"API Reference","title":"WaveguideModes.rwggz","text":"rwggz(p, m, n, a, b, f; ϵᵣ=1.0, tanδ=0.0, σ=Inf, Rq=0.0) -> (γ, Z)\nrwggz(p, m, n, a, b, f; epsr=1.0, tandel=0.0, sigma=Inf, Rq=0.0) -> (γ, Z)\n\nAccurately compute γ and Z (prop. constant and wave impedance) of a mode in rectangular guide with rough walls.\n\nThis method accepts SI values as pure numbers (without attached units). \n\nRequired Positional Arguments\n\np::TETM: The mode type.\nm::Int, n::Int: Mode indices in the x and y directions, resp.\na::Real,  b::Real: The waveguide x and y dimensions [m].\nf: Frequency [Hz].\n\nOptional Keyword Arguments\n\nϵᵣ or epsr: Dielectric constant of material filling the waveguide. Default value is 1.0.\ntanδ or tandel: Loss tangent of material filling the waveguide. Default value is 0.0. \nσ or sigma: The bulk conductivity of the waveguide metal walls [S/m]. Default value is Inf.\nRq: The RMS surface roughness of the waveguide walls [m]. Default value is 0.0.\n\nReturn Value\n\nThe tuple (γ, Z) where:\n\nγ: Complex propagation constant [neper/m]\nZ: Complex wave impedance [Ω]\n\nReferences:\n\n[1] Yeap, Kim Ho et al., \"Attenuation in circular and rectangular waveguides.\"  Electromagnetics 37, no. 3 (2017): 171-184.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.rwgkco-Tuple{Real, Real, Integer, Integer}","page":"API Reference","title":"WaveguideModes.rwgkco","text":"rwgkco(a, b, m, n)\n\nCompute the cutoff frequency for a rectangular waveguide.\n\nInput Variables\n\na, b: The dimensions of the waveguide in the x and y directions, respectively.\nm, n: Mode indices in the x and y directions, respectively.\n\nReturn value:\n\nkco: Cutoff wavenumber in inverse units of a and b.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#WaveguideModes.update-Tuple{WaveguideModes.HomogeneousMetalPipeMode}","page":"API Reference","title":"WaveguideModes.update","text":"update(mode::HomogeneousMetalPipeMode; f::Real, γ::Complex, Z::Complex) -> mode\n\nCreate a copy of an existing mode with updated frequency-dependent fields and return the updated mode.\n\n\n\n\n\n","category":"method"},{"location":"autodocs/#Private-Types","page":"API Reference","title":"Private Types","text":"","category":"section"},{"location":"autodocs/#WaveguideModes.HomogeneousMetalPipeMode","page":"API Reference","title":"WaveguideModes.HomogeneousMetalPipeMode","text":"abstract type HomogeneousMetalPipeMode <: MetalPipeMode end\n\nElectromagnetic mode supported by homogeneously filled metal pipes.  Concrete subtypes should contain at least the following fields:\n\np::TETM: Mode classification (TE or TM).\nf::Float64: Frequency [Hz].\nγ::ComplexF64: Frequency-dependent attenuation constant [np/m].\nZ::ComplexF64: Frequency-dependent wave impedance [Ω].\n\n\n\n\n\n","category":"type"},{"location":"autodocs/#WaveguideModes.MetalPipeMode","page":"API Reference","title":"WaveguideModes.MetalPipeMode","text":"abstract type MetalPipeMode <: Mode end\n\nElectromagnetic mode supported by metal pipes, possibly filled with inhomogeneous dielectric.\n\n\n\n\n\n","category":"type"},{"location":"autodocs/#WaveguideModes.Mode","page":"API Reference","title":"WaveguideModes.Mode","text":"abstract type Mode end\n\nArbitrary electromagnetic mode.  Should contain the following fields:\n\nγ::ComplexF64: Attenuation constant in z direction [np/m]\n\n\n\n\n\n","category":"type"},{"location":"autodocs/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"autodocs/","page":"API Reference","title":"API Reference","text":"This page was generated using Literate.jl.","category":"page"},{"location":"autodocs/","page":"API Reference","title":"API Reference","text":"","category":"page"}]
}
